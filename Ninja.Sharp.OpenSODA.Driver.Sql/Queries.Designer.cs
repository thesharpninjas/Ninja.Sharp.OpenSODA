//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ninja.Sharp.OpenSODA.Driver.Sql.Native {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Queries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Queries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ninja.Sharp.OpenSODA.Driver.Sql.Native.Queries", typeof(Queries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE
        ///    collection SODA_COLLECTION_T;
        ///BEGIN
        ///    collection := DBMS_SODA.open_collection(:name);
        ///    IF collection IS NULL THEN
        ///        :collectionexists := false;
        ///    ELSE
        ///        :collectionexists := true;
        ///    END IF;
        ///END;.
        /// </summary>
        internal static string checkcollection {
            get {
                return ResourceManager.GetString("checkcollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE
        ///    collection SODA_COLLECTION_T;
        ///    document SODA_DOCUMENT_T;
        ///    result_document SODA_DOCUMENT_T;
        ///    result_document_key varchar2(200);
        ///BEGIN
        ///    collection := DBMS_SODA.open_collection(:name);
        ///    document := SODA_DOCUMENT_T(b_content =&gt; :document);
        ///    result_document := collection.save_and_get(document);
        ///    IF result_document IS NOT NULL THEN
        ///        result_document_key := result_document.get_key;
        ///        IF NOT :mycursor%ISOPEN THEN
        ///            OPEN :mycursor FOR SELECT T.* FROM [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string create {
            get {
                return ResourceManager.GetString("create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE collection SODA_Collection_T;
        ///BEGIN
        ///    collection := DBMS_SODA.create_collection(:name);
        ///END;.
        /// </summary>
        internal static string createcollection {
            get {
                return ResourceManager.GetString("createcollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE
        ///    collection SODA_COLLECTION_T;
        ///    status NUMBER;
        ///BEGIN
        ///    collection := DBMS_SODA.open_collection(:name);
        ///    status := collection.find().key(:key).remove;
        ///    IF status = 1 THEN
        ///        :removed := true;
        ///    ELSE
        ///        :removed := false;
        ///    END IF;
        ///END;.
        /// </summary>
        internal static string delete {
            get {
                return ResourceManager.GetString("delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BEGIN
        ///    OPEN :mycursor FOR
        ///   		SELECT * FROM [[name]]
        ///        [[where]]
        ///        [[pagination]];
        ///END;.
        /// </summary>
        internal static string filter {
            get {
                return ResourceManager.GetString("filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE
        ///	collection SODA_COLLECTION_T;
        ///	document_key varchar2(200);
        ///BEGIN
        ///	document_key := :id;
        ///	collection := DBMS_SODA.open_collection(:name);
        ///	IF NOT :mycursor%ISOPEN THEN
        ///		OPEN :mycursor FOR SELECT T.* FROM &quot;[[COLLECTIONNAME]]&quot; T WHERE T.ID = document_key;
        ///	END IF;
        ///END;.
        /// </summary>
        internal static string retrieve {
            get {
                return ResourceManager.GetString("retrieve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE
        ///    collection SODA_COLLECTION_T;
        ///    document SODA_DOCUMENT_T;
        ///    result_document SODA_DOCUMENT_T;
        ///    result_document_key varchar2(200);
        ///BEGIN
        ///    collection := DBMS_SODA.open_collection(:name);
        ///    document := SODA_DOCUMENT_T(b_content =&gt; :document);
        ///    result_document := collection.find().key(:key).replace_one_and_get(document);
        ///    IF result_document IS NOT NULL THEN
        ///        result_document_key := result_document.get_key;
        ///        IF NOT :mycursor%ISOPEN THEN
        ///            OPEN :mycu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string update {
            get {
                return ResourceManager.GetString("update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE
        ///    collection SODA_COLLECTION_T;
        ///    document SODA_DOCUMENT_T;
        ///    result_document SODA_DOCUMENT_T;
        ///    result_document_key varchar2(200);
        ///BEGIN
        ///    collection := DBMS_SODA.open_collection(:name);
        ///    document := SODA_DOCUMENT_T(b_content =&gt; :document);
        ///    result_document := collection.find().key(:key).replace_one_and_get(document);
        ///    IF result_document IS NOT NULL THEN
        ///        result_document_key := result_document.get_key;
        ///        IF NOT :mycursor%ISOPEN THEN
        ///            OPEN :mycu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string upsert {
            get {
                return ResourceManager.GetString("upsert", resourceCulture);
            }
        }
    }
}
